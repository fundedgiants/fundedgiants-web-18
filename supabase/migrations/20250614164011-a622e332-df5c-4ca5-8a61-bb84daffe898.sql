
-- Create a table to store manually set exchange rates
CREATE TABLE public.exchange_rates (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  currency_pair TEXT NOT NULL UNIQUE,
  rate NUMERIC NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Enable Row Level Security
ALTER TABLE public.exchange_rates ENABLE ROW LEVEL SECURITY;

-- Allow all users to read exchange rates
CREATE POLICY "Allow all users to read exchange rates"
ON public.exchange_rates FOR SELECT
TO public
USING (true);

-- Create a function to automatically update the 'updated_at' timestamp
CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Create a trigger to fire the function
CREATE TRIGGER on_exchange_rates_update
BEFORE UPDATE ON public.exchange_rates
FOR EACH ROW
EXECUTE PROCEDURE public.handle_updated_at();

-- Insert a default rate for USD_NGN. You can change this in the Supabase Table Editor.
INSERT INTO public.exchange_rates (currency_pair, rate) VALUES ('USD_NGN', 1500.00);
